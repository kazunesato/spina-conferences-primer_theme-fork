- if @conference.content(:submission_date).present? && @conference.content(:submission_date) >= Date.today
  - content_for(:flash) { render 'submission_flash' }

- content_for(:header) { render 'header' }

= turbo_frame_tag 'conference_tabs' do
  = render Primer::Alpha::UnderlineNav.new(tag: :div, label: t(:'.conference_navigation')) do |component|
    - component.tab(href: frontend_conference_path(@conference, tab: 'information', presentation_type: @presentation_type&.id),
                    selected: (@tab == 'information'), id: 'information') do
      = t(:'.tabs.information')
    - component.tab(href: frontend_conference_path(@conference, tab: 'presentations', presentation_type: @presentation_type&.id),
                    selected: (@tab == 'presentations'), id: 'presentations') do
      = t(:'.tabs.presentations')
    - component.tab(href: frontend_conference_path(@conference, tab: 'events', presentation_type: @presentation_type&.id),
                    selected: (@tab == 'events'), id: 'events') do
      = t(:'.tabs.events')
    - component.actions do
      = render Primer::ButtonComponent.new(tag: :a, href: frontend_conference_url(@conference, protocol: :webcal, format: :ics),
                                           button_type: :primary, variant: :small) do
        = render Primer::OcticonComponent.new('calendar')
        = t(:'.subscribe')
  - case @tab
    - when 'information'
      - cache [@conference, @tab] do
        - if @conference.content(:text).present?
          = render(Primer::Markdown.new(my: 4)) { @conference.content.html(:text).to_s }
        - else
          = render Primer::Beta::Blankslate.new(my: 4) do |blankslate|
            - blankslate.visual_icon(icon: 'info')
            - blankslate.heading(tag: :h3).with_content(t(:'.no_information'))
    - when 'presentations'
      - cache [@conference.presentations, @presentation_type, @presentations, @presentations.collect(&:presenters), @tab] do
        = render partial: 'presentations'
    - when 'events'
      - cache [@conference.events, @tab] do
        = render partial: 'events', locals: { events: @conference.events }
    - else
      = render Primer::Beta::Blankslate.new(my: 4) do |blankslate|
        - blankslate.visual_icon(icon: 'x-circle')
        - blankslate.heading(tag: :h3).with_content(t(:'.no_tab'))
        - blankslate.description { t('.tab_does_not_exist', tab: @tab) }
